name: CI/CD Pipeline

on:
  push:
    tags:
      - '*'

concurrency:
  group: ci-tests-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: steps.filter.outputs.src == 'true' && env.continue == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.2'
          cache: 'yarn'

      - name: Setup registry credentials
        if: steps.filter.outputs.src == 'true' && env.continue == 'true'
        run: |
          echo //npm.pkg.github.com/:_authToken=${{ secrets.PACKAGE_TOKEN }} >> .npmrc
          yarn config set 'npmRegistries["//npm.pkg.github.com"].npmAuthToken' "${{ secrets.PACKAGE_TOKEN }}" --home

      - name: Install dependencies
        if: steps.filter.outputs.src == 'true' && env.continue == 'true'
        run: yarn install --immutable --immutable-cache --check-cache

      - name: Run unit tests
        if: steps.filter.outputs.src == 'true' && env.continue == 'true'
        run: DOTENV_CONFIG_QUIET=true NODE_ENV=test yarn test a

      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,prefix=build-,value=${{ github.run_number }}
            type=schedule
            type=ref,event=branch,suffix=-${{github.run_number}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          secret-files: |
            "YARNRC=/home/runner/.yarnrc.yml"
          build-args: |
            MODE=production
            APP_VERSION=${{ github.version }}
            BUILD_NUMBER=${{ github.run_number }}
            GIT_HASH=${{ github.sha }}
            BUILDER=${{ github.actor }}
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            APP_REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:latest
          cache-to: type=inline
